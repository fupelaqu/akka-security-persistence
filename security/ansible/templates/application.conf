akka.http.server.port={{service.port|int}}

elastic.credentials.url="{{elastic_http_hosts}}"

security{
  //  PROJ-4
//  Mot de passe :
//    Le mot de passe doit être composé de caractères alphanumériques et peut contenir des caractères spéciaux.
//  Il doit respecter au minimum les règles suivantes :
//  8 caractères minimum
//  16 caractères maximum
//  1 lettre majuscule minimum
//  1 lettre minuscule minimum
//  1 chiffre minimum
  password {
    whitespace{
    }
    length{
      min = 8
      max = 16
    }
    upperCaseCharacter{
      size = 1
    }
    lowerCaseCharacter{
      size = 1
    }
    numberCharacter{
      size = 1
    }
  }
  mail {
    from = "{{security_mail_from}}"
  }
  activation {
    enabled = {{security_activation_enabled|bool|lower}}
  }
  maxLoginFailures = {{security_maxLoginFailures|int}}
}

notification{
  mail {
    host = "{{notification_mail_host}}"
    port = {{notification_mail_port|int}}
    sslEnabled = false
    username = "{{notification_mail_username}}"
    password = "{{notification_mail_password}}"
  }
}

kafka-journal {
  zookeeper {
    # -------------------------------------------------------------------
    # Zookeeper client configuration
    # -------------------------------------------------------------------
    connect = "{{zk_list}}"
  }
  consumer {
    # -------------------------------------------------------------------
    # Simple consumer configuration (used for message replay and reading
    # metadata).
    #
    # See http://kafka.apache.org/documentation.html#consumerconfigs
    # See http://kafka.apache.org/documentation.html#simpleconsumerapi
    # -------------------------------------------------------------------
    bootstrap.servers = "{{broker_list}}"
  }
  producer {
    # -------------------------------------------------------------------
    # PersistentRepr producer (to journal topics) configuration.
    #
    # See http://kafka.apache.org/documentation.html#producerconfigs
    #
    # The metadata.broker.list property is set dynamically by the journal.
    # No need to set it here.
    # -------------------------------------------------------------------
    bootstrap.servers = "{{broker_list}}"
  }
  event {
    producer{
      bootstrap.servers = "{{broker_list}}"
      topic.mapper.class = "akka.persistence.kafka.EmptyEventTopicMapper" #DefaultEventTopicMapper
    }
  }
}

kafka-snapshot-store {
  prefix = "snapshot-"
  consumer {
    # -------------------------------------------------------------------
    # Simple consumer configuration (used for message replay and reading
    # metadata).
    #
    # See http://kafka.apache.org/documentation.html#consumerconfigs
    # See http://kafka.apache.org/documentation.html#simpleconsumerapi
    # -------------------------------------------------------------------
    bootstrap.servers = "{{broker_list}}"
    auto.offset.reset = "latest"
  }
  producer {
    # -------------------------------------------------------------------
    # PersistentRepr producer (to journal topics) configuration.
    #
    # See http://kafka.apache.org/documentation.html#producerconfigs
    #
    # The metadata.broker.list property is set dynamically by the journal.
    # No need to set it here.
    # -------------------------------------------------------------------
    bootstrap.servers = "{{broker_list}}"
  }
}

kafka {
  topic-config.replication = 0
  topic-config.partitions = 1
  uri = "{{broker_list}}"
  zookeeper = "{{zk_list}}"
}
